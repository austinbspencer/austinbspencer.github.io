(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a4d7f"],{"07bd":function(e,t,a){"use strict";a.r(t);var i=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("v-container",[null===e.projInfo||void 0===e.projInfo?a("v-row",{staticClass:"pt-5 fill-height",attrs:{"align-content":"center",justify:"center"}},[a("v-col",{attrs:{cols:"6"}},[a("v-progress-linear",{attrs:{indeterminate:"",color:"yellow darken-2"}})],1),e._v(" "+e._s(e.getProject())+" ")],1):e.projInfo.name!==e.name?a("v-row",[e._v(" "+e._s(e.getProject())+" ")]):e.projInfo.links.private?a("v-row",{attrs:{justify:"center"}},[a("v-col",{attrs:{sm:"10",md:"6"}},[a("h1",{staticStyle:{"text-align":"center"}},[e._v(e._s(e.projInfo.title))])])],1):e._e(),null===e.projInfo||void 0===e.projInfo||e.projInfo.name!==e.name||e.projInfo.links.private?e._e():a("v-row",{staticClass:"pa-6",attrs:{justify:"center"}},[a("v-col",{attrs:{sm:"10",md:"6"}},[a("v-card",[a("v-img",{attrs:{src:""+e.loadRepoStats(e.projInfo.links.repoShort,e.projInfo.links.user||"austinbspencer")}})],1)],1)],1),a("v-row",{attrs:{justify:"center"}},[a("v-col",{attrs:{sm:"10",md:"8"}},[a("v-card",{staticClass:"pa-6"},["abspen-1"===e.name?a("div",[a("abspen1")],1):e._e(),"go-trading-algo"===e.name?a("div",[a("alpaca-go")],1):e._e(),"alpaca-python"===e.name?a("div",[a("alpaca-python")],1):e._e(),"attendance-gui"===e.name?a("div",[a("attendance")],1):e._e(),"bday-email"===e.name?a("div",[a("bday-email")],1):e._e(),"bots"===e.name?a("div",[a("bots")],1):e._e(),"capital-tracker"===e.name?a("div",[a("cap-track")],1):e._e(),"coffee-shop"===e.name?a("div",[a("coffee-shop")],1):e._e(),"discord-bot"===e.name?a("div",[a("discord-bot")],1):e._e(),"go-encode"===e.name?a("div",[a("encode")],1):e._e(),"go-backend"===e.name?a("div",[a("go-backend")],1):e._e(),"encode-decode"===e.name?a("div",[a("encode-decode")],1):e._e(),"lexical-analyzer"===e.name?a("div",[a("lexical-analyzer")],1):e._e(),"twitter-bot"===e.name?a("div",[a("twitter-bot")],1):e._e(),a("v-divider"),a("v-container",[a("v-row",[a("v-col",{attrs:{cols:"6"}},[e.projInfo.links.private?e._e():a("v-chip",{attrs:{color:"primary",outlined:"",pill:"",href:e.projInfo.links.repo,role:"link"}},[a("v-icon",[e._v(" mdi-github ")])],1)],1),a("v-col",{attrs:{cols:"6"}},[null!==e.projInfo.links.live?a("v-chip",{staticClass:"float-right",attrs:{color:"primary",outlined:"",pill:"",href:e.projInfo.links.live,role:"link"}},[e._v(" Live "),a("v-icon",{attrs:{right:""}},[e._v(" mdi-web ")])],1):e._e()],1)],1)],1)],1)],1)],1)],1)],1)},o=[],s=(a("b0c0"),a("99af"),function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)}),n=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"v1ofmywebsitehitshttpshitsseeyoufarmcomapicountincrbadgesvgurlhttps3a2f2fgithubcom2faustinbspencer2fabspen1githubiocount_bg23323330title_bg23f0db4ficonicon_color23e7e7e7titlejsedge_flatfalsehttpshitsseeyoufarmcom"}},[e._v("V1 of my website! "),a("a",{attrs:{href:"https://hits.seeyoufarm.com"}},[a("img",{attrs:{src:"https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fabspen1%2Fabspen1.github.io&count_bg=%23323330&title_bg=%23F0DB4F&icon=&icon_color=%23E7E7E7&title=JS&edge_flat=false",alt:"Hits"}})])]),a("p",[e._v("My website, now being redirected now to my domain "),a("a",{attrs:{href:"austinbspencer.com"}},[e._v("austinbspencer.com")])]),a("h3",{attrs:{id:"checkoutv2httpsgithubcomaustinbspencerv2ofmywebsitebuiltwithvueframework"}},[e._v("Check out "),a("a",{attrs:{href:"https://github.com/austinbspencer/V2"}},[e._v("V2")]),e._v(" of my website, built with Vue framework!")]),a("h2",{attrs:{id:"about"}},[e._v("About")]),a("ul",[a("li",[e._v("Added info form that can email me when someone wants to send me something!")]),a("li",[e._v("Was able to do this with my "),a("a",{attrs:{href:"https://github.com/austinbspencer/go-backend"}},[e._v("backend")]),e._v(" in Go")])]),a("h2",{attrs:{id:"sociallinks"}},[e._v("Social Links")]),a("ul",[a("li",[e._v("Broke Facebook link since I don't really use Facebook or expect people clicking that link often")])]),a("h2",{attrs:{id:"contactpage"}},[e._v("Contact Page")]),a("ul",[a("li",[e._v("Allows people to enter their name, email, and a message that will get emailed to me")]),a("li",[e._v("Uses "),a("a",{attrs:{href:"https://github.com/austinbspencer/go-backend"}},[e._v("Go backend")]),e._v(" to send me the email with the user's contact information")]),a("li",[e._v("Once user submits their info a new screen will show thanking them with a link to the home page")]),a("li",[e._v("Uses a go package to ensure emails are valid and also the JavaScript app makes sure that all input fields are filled ")])]),a("h2",{attrs:{id:"projects"}},[e._v("Projects")]),a("ul",[a("li",[e._v("Most of my personal coding projects are within these sources")]),a("li",[e._v("I love keeping a high percantage of my code as open-source")]),a("li",[e._v("I have recently added some screen-recorded demos of the Java projects running")]),a("li",[e._v("I might try to do more of this for projects I can't have a webpage for")])]),a("h3",{attrs:{id:"hangman"}},[e._v("Hangman")]),a("ul",[a("li",[e._v("Added random-words generator with browserify 😍")])]),a("h3",{attrs:{id:"rockpaperscissors"}},[e._v("Rock Paper Scissors")]),a("ul",[a("li",[e._v("Included Rock Paper Scissors game in JavaScript projects")]),a("li",[e._v("Code from "),a("a",{attrs:{href:"https://www.youtube.com/watch?v=jaVNP3nIAv0&t=871s"}},[e._v("freecodecamp")])]),a("li",[e._v("Added backend to the game with Axios and browserify")]),a("li",[e._v("You can now plug in your email and it will get your total score")]),a("li",[e._v("I might add where you can clear your score")]),a("li",[e._v("User score is stored in Redis on my "),a("a",{attrs:{href:"https://github.com/austinbspencer/go-backend"}},[e._v("backend")])])]),a("h2",{attrs:{id:"nextproject"}},[e._v("Next Project")]),a("ul",[a("li",[e._v("Uses my "),a("a",{attrs:{href:"https://github.com/austinbspencer/go-backend"}},[e._v("backend")]),e._v(" to persist data")]),a("li",[e._v("Might need to adjust the format of the description string..")]),a("li",[e._v("Backend is running on guldentech.com")])]),a("h2",{attrs:{id:"404page"}},[e._v("404 Page")]),a("ul",[a("li",[e._v("Added a wild 404 page with some crazy colors")]),a("li",[e._v("There is a link back to home page")])]),a("h2",{attrs:{id:"todo"}},[e._v("To-Do")]),a("ul",[a("li",[e._v("Add README to individual folders that we link to")])]),a("h2",{attrs:{id:"sources"}},[e._v("Sources")]),a("h3",{attrs:{id:"animatedbackground"}},[e._v("Animated Background")]),a("ul",[a("li",[e._v("Not currently using this since I couldn't get it to work with a header")]),a("li",[a("a",{attrs:{href:"https://codepen.io/uiswarup/pen/XWdXGGV"}},[e._v("Kumar Kuila")])])]),a("h3",{attrs:{id:"fancyhover"}},[e._v("Fancy Hover")]),a("ul",[a("li",[e._v("Not using this right now but going to leave here as reference for future use possibly")]),a("li",[a("a",{attrs:{href:"https://codepen.io/shshaw/pen/MoxrPV"}},[e._v("Shaw")])])]),a("h3",{attrs:{id:"projectpage"}},[e._v("Project Page")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/adamalston/v1"}},[e._v("Adam Alston")]),e._v(" has his website open-source as well.. I pulled the styles for this page from there")]),a("li",[e._v("I also got the idea for the footer/header on pages from his website. ")]),a("li",[e._v("Program language logos all from "),a("a",{attrs:{href:"https://www.logo.wine/Technology"}},[e._v("Logo Wine")])])]),a("h3",{attrs:{id:"newproject"}},[e._v("New Project")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/browserify/brfs"}},[e._v("fs/browserify/brfs")])]),a("li",[e._v("If you use 'fs' package"),a("ul",[a("li",[e._v("$ browserify -t brfs page.js > bundle.js")])])]),a("li",[e._v("If not, you dont need the brfs tag"),a("ul",[a("li",[e._v("$ browserify page.js > bundle.js")])])]),a("li",[a("a",{attrs:{href:"https://github.com/austinbspencer/go-backend"}},[e._v("backend")]),e._v(" to persist data run on Go")])])])}],r={},l=r,c=a("2877"),h=Object(c["a"])(l,s,n,!1,null,"617331d6",null),d=h.exports,u=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},p=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"gotradingalgo"}},[e._v("go trading algo")]),a("h3",{attrs:{id:"maingo"}},[e._v("main.go")]),a("ul",[a("li",[e._v("This is a simple algorithm that incorporates daily rebalancing to limit volatility and increase returns "),a("ul",[a("li",[e._v("Set up so you can edit your holdings and weights however you like")])])]),a("li",[e._v("Environment Variable Setup"),a("ul",[a("li",[e._v("There are several ways to set and get environment variables with Go")]),a("li",[e._v("I chose to use the GoDotEnv Package"),a("ol",[a("li",[e._v("Install the GoDotEnv Package - $ go get github.com/joho/godotenv")]),a("li",[e._v("Create the .env file within the same directory as your algorithm")])])])])]),a("li",[e._v("Download Alpaca Packages"),a("ul",[a("li",[e._v("$ go get github.com/alpacahq/alpaca-trade-api-go/common")]),a("li",[e._v("$ go get github.com/alpacahq/alpaca-trade-api-go/polygon")]),a("li",[e._v("$ go get github.com/alpacahq/alpaca-trade-api-go/stream")]),a("li",[e._v("$ go get github.com/alpacahq/alpaca-trade-api-go/alpaca")])])]),a("li",[e._v("Download Decimal Package"),a("ul",[a("li",[e._v("$ go get github.com/shopspring/decimal")])])])]),a("h1",{attrs:{id:"redisshortable"}},[e._v("Redis-shortable")]),a("ul",[a("li",[a("p",[e._v("Currently works but takes over 5 minutes to execute")])]),a("li",[a("p",[a("strong",[e._v("Fixed the execution time to only take 2.45 seconds without go-routines")])])])])])}],v={},m=v,g=Object(c["a"])(m,u,p,!1,null,"54c5f4c8",null),f=g.exports,_=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},b=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"tradingalgorithmshitshttpshitsseeyoufarmcomapicountincrbadgesvgurlhttps3a2f2fgithubcom2fabspen12falpacapythoncount_bg23808080title_bg23306998iconpythonsvgicon_color23ffd43btitlehitsedge_flatfalsehttpshitsseeyoufarmcom"}},[e._v("Trading-Algorithms "),a("a",{attrs:{href:"https://hits.seeyoufarm.com"}},[a("img",{attrs:{src:"https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fabspen1%2Falpaca-python&count_bg=%23808080&title_bg=%23306998&icon=python.svg&icon_color=%23FFD43B&title=hits&edge_flat=false",alt:"Hits"}})])]),a("p",[e._v("This is a bunch of code that is me trying to learn the ins and outs of coding in Python. Specifically with API, CSV/TXT files, Redis Database and Pylivetrader. There is a little bit of me trying to migrate these algorithms into other programming languages as well. So far just Golang and JavaScript. The algorithms I have coded so far are simple rebalance algorithms.")]),a("h2",{attrs:{id:"alpaca"}},[e._v("📁 alpaca")]),a("p",[e._v("Alpaca is an awesome trading platform for algorithmic trading. They have outstanding docs and an easy-to-work-with API. Here are some links to "),a("a",{attrs:{href:"https://app.alpaca.markets/login"}},[e._v("Alpaca")]),e._v(" and the "),a("a",{attrs:{href:"https://alpaca.markets/docs/"}},[e._v("API docs")])]),a("h3",{attrs:{id:"algodata"}},[e._v("algo-data")]),a("ul",[a("li",[e._v("This script will give you some account information and data")]),a("li",[e._v("You need to instantiate some environment variables first"),a("ul",[a("li",[e._v('You can do this with export ENV_VAR="value"')]),a("li",[e._v("Need your API Key, API Secret Key and API Base URL")])])]),a("li",[e._v("Run the script and get some insight into your account's performance")])]),a("h3",{attrs:{id:"getacctpct"}},[e._v("get-acct-pct")]),a("ul",[a("li",[e._v("This is a possible addition to our WebApp")]),a("li",[e._v("This script is set up to be able to take in your API credentials as environment variables")]),a("li",[e._v("Then will find your true base value")]),a("li",[e._v("With that base value will calculate your total P/L of your account")])]),a("h3",{attrs:{id:"jsonfunct"}},[e._v("json-funct")]),a("ul",[a("li",[e._v("This is a script of several functions that will return json type")]),a("li",[e._v("Very useful if you are wanting to build your own algorithm within Alpaca")]),a("li",[e._v("There are many other functions that could be added to this script by reading the Alpaca Docs")])]),a("h3",{attrs:{id:"alpaca-1"}},[e._v("alpaca")]),a("ul",[a("li",[e._v("This is the original script that now just has leftover scraps that I didn't pull into a seperate script yet")]),a("li",[e._v("Still has some interesting things within but does need a clean-up")]),a("li",[e._v("Something specific that is cool in here is how to work with the Clock and whether the market is open/closed")])]),a("h3",{attrs:{id:"shortabletxt"}},[e._v("shortable-txt")]),a("ul",[a("li",[e._v("This script will read/write to and from txt files")]),a("li",[e._v("Checks whether a specific list of Assets is shortable and will do things accordingly")]),a("li",[e._v("Pretty great option for keeping track of when Assets are hard-to-borrow or not shortable")]),a("li",[e._v("However, I would recommend using the 'redis-shortable' script over this one"),a("ul",[a("li",[e._v("redis-shortable will not use other files and instead use the Redis database for quick speeds and less storage needed")])])])]),a("h2",{attrs:{id:"python"}},[e._v("📁 python")]),a("h3",{attrs:{id:"algopy"}},[e._v("algo.py")]),a("ul",[a("li",[e._v("This is a simple algorithm that incorporates daily rebalancing to limit volatility and increase returns "),a("ul",[a("li",[e._v("Set up so you can edit your holdings and weights however you like")])])]),a("li",[e._v("Includes the schedule module which works brilliantly")]),a("li",[e._v("Allows for the algorithm to be ran 24/7 and only do things when you want to")]),a("li",[e._v("There is a Dockerfile in this directory that can help with running 24/7")])]),a("h3",{attrs:{id:"dockerfile"}},[e._v("Dockerfile")]),a("ul",[a("li",[e._v("Built using conda but you could just as easily use a different python as long as it's python3")]),a("li",[e._v("Make sure to download each of your imports that aren't in the default library for python")])]),a("h3",{attrs:{id:"runningwithdocker247"}},[e._v("Running with Docker 24/7")]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v('# To run you can use to following command\n\n$ docker pull 10.10.10.1:5000/algo-name \\\n&& docker run -d \\\n  --name algo_name \\\n  --restart unless-stopped \\\n  -e APCA_API_KEY_ID="some key ID" \\\n  -e APCA_API_SECRET_KEY="some secret KEY" \\\n  -e APCA_API_BASE_URL="https://api.alpaca.markets or https://paper-api.alpaca.markets" \\\n  10.10.10.1:5000/algo-name\n')])]),a("h3",{attrs:{id:"buildpushimages"}},[e._v("Build & Push Images")]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("# To build and push you can use these commands (for portainer)\n\n$ docker build --no-cache -t 10.10.10.1:5000/algo-name .\n$ docker push 10.10.10.1:5000/algo-name\n")])]),a("h3",{attrs:{id:"python-1"}},[e._v("Python")]),a("p",[a("strong",[e._v("redis")])]),a("ul",[a("li",[e._v("Check my other repo "),a("a",{attrs:{href:"https://github.com/austinbspencer/twitter-bot#prerequisites"}},[e._v("twitter-bot")]),e._v(" for redis install directions")]),a("li",[e._v("I also implement redis in several ways in that repo so a great resource for more examples")]),a("li",[e._v("In my "),a("a",{attrs:{href:"https://github.com/austinbspencer/Fantasy-Twitter/blob/master/main.py"}},[e._v("Fantasy-Twitter")]),e._v(" script I also use Redis.")]),a("li",[e._v("In my opinion, Redis is the easiest to manipulate in Python. Could be biased since I've used Redis with Python the most out of the three")])]),a("h2",{attrs:{id:"redisshortable"}},[e._v("📁 redis-shortable")]),a("h3",{attrs:{id:"mainpy"}},[e._v("main.py")]),a("ul",[a("li",[e._v("This script uses Redis database to keep track of how frequently specific Assets are actually shortable")]),a("li",[e._v("Good to know if you're wanting to short Assets that frequently fluctuate from hard-to-borrow or to un-shortable")]),a("li",[e._v("I created this script to keep track of how frequently Volatility ETF's are shortable")]),a("li",[e._v("There is a Dockerfile as well that will allow you to run this script each morning automatically")])]),a("h3",{attrs:{id:"redissetup"}},[e._v("Redis Setup")]),a("ul",[a("li",[e._v("Download redis and activate your redis server, a simple youtube search will do")]),a("li",[e._v("Start running your redis-server")]),a("li",[e._v("Next open your redis-cli")]),a("li",[e._v("Be sure to change the requirepass within your config to secure your server")]),a("li",[e._v("Within redis-cli// > config get requirepass"),a("ol",[a("li",[e._v('"requirepass"')]),a("li",[e._v('"This Will Be Empty"')])])]),a("li",[e._v("Set your password")]),a("li",[e._v("Within redis-cli// > config set requirepass yourPasswordHere (recommended at least 32 characters long)")])]),a("h3",{attrs:{id:"running"}},[e._v("Running")]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v('# To run redis-shortable use the following docker command\n\ndocker pull 10.10.10.1:5000/algo-name \\\n&& docker run -d \\\n  --name algo_name \\\n  --restart unless-stopped \\\n  -e APCA_API_KEY_ID="some key ID" \\\n  -e APCA_API_SECRET_KEY="some secret KEY" \\\n  -e APCA_API_BASE_URL="https://api.alpaca.markets or https://paper-api.alpaca.markets" \\\n  10.10.10.1:5000/algo-name\n')])]),a("h3",{attrs:{id:"buildandpushimage"}},[e._v("Build and push image")]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("# To build and push you can use these commands (for portainer)\n\n$ docker build --no-cache -t 10.10.10.1:5000/algo-name .\n$ docker push 10.10.10.1:5000/algo-name\n")])])])}],w={},y=w,k=Object(c["a"])(y,_,b,!1,null,"b5016034",null),I=k.exports,T=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},E=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"csc360finalproject"}},[e._v("CSC 360 Final Project")]),a("p",[e._v("This is a GUI that will allow several functions. The main purpose of this program is to allow teachers to upload their rosters and then easily keep track of the attendance of each student. Functions:")]),a("ul",[a("li",[e._v("Upload a roster: Will display the roster to a JTable on the JFrame")]),a("li",[e._v("Upload attendance: Will update table to display the attendance")]),a("li",[e._v("Save the table: Will save the table as a CSV to a file on your computer")]),a("li",[e._v("Graph: Will display the attendance data as a scatter chart in a seperate window")])]),a("h2",{attrs:{id:"contributors"}},[e._v("Contributors")]),a("ul",[a("li",[e._v("Austin Spencer")]),a("li",[e._v("Kevin Johnson")]),a("li",[e._v("Aidan Hoppe")])])])}],x={},j=x,P=Object(c["a"])(j,T,E,!1,null,"215381a7",null),S=P.exports,A=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},C=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"bdayemailhitshttpshitsseeyoufarmcomapicountincrbadgesvgurlhttps3a2f2fgithubcom2fabspen12fbdayemailcount_bg2329beb0title_bg23555555icongosvgicon_color2329beb0titlehitsedge_flatfalsehttpshitsseeyoufarmcom"}},[e._v("bday-email "),a("a",{attrs:{href:"https://hits.seeyoufarm.com"}},[a("img",{attrs:{src:"https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fabspen1%2Fbday-email&count_bg=%2329BEB0&title_bg=%23555555&icon=go.svg&icon_color=%2329BEB0&title=hits&edge_flat=false",alt:"Hits"}})])]),a("p",[e._v("Python/Go script that will send a personalized birthday message over email")]),a("h2",{attrs:{id:"pythonversion"}},[e._v("Python Version")]),a("ul",[a("li",[e._v("Uses post request to my "),a("a",{attrs:{href:"https://github.com/go-backend"}},[e._v("Go Back-End")]),e._v(" server to complete the emailing process")]),a("li",[e._v("Rest of the code is done in the Python script..")]),a("li",[e._v("Figures out if anyone in my Database has a birthday today and if so will send a personalized email with random joke")])]),a("h2",{attrs:{id:"goversion"}},[e._v("Go Version")]),a("ul",[a("li",[e._v("No need to use the back-end server")]),a("li",[e._v("All code necessary is in this repo")]),a("li",[e._v("Main.go imports our emailer package")]),a("li",[a("strong",[e._v("I still haven't figured out a scheduler with go to run the script each morning")])])]),a("h2",{attrs:{id:"randomjoke"}},[e._v("Random Joke")]),a("p",[e._v("This is a random joke pulled from API by "),a("a",{attrs:{href:"https://github.com/KegenGuyll/DadJokes_API"}},[e._v("KegenGuyII")])]),a("ul",[a("li",[e._v("Could add in where when joke is sent to person we append a set with the joke number so we don't retell any jokes to people")])]),a("h2",{attrs:{id:"secure"}},[e._v("Secure")]),a("ul",[a("li",[e._v("Decided to add a layer of security to my back-end emailer")]),a("li",[e._v("Since this is open-source, anyone could see the url for my back-end api"),a("ul",[a("li",[e._v("Knowing this, there is now required authentification when trying to email a birthday message")])])]),a("li",[e._v("BASE_URL is also now hidden as well")])]),a("h1",{attrs:{id:"todocompleted"}},[e._v("To Do (Completed)")]),a("ul",[a("li",[e._v("Recreate this code in Go and remove the api calls to my back-end")]),a("li",[e._v("I can just have the Go script run as a stand-alone application")]),a("li",[e._v("This will be good for learning go and I think a better implementation for this script")])]),a("h3",{attrs:{id:"abovetodosarecompletedhoweverneedtofigureoutarunscheduler"}},[e._v("Above To Dos are completed, however need to figure out a run scheduler")])])}],R={},D=R,F=Object(c["a"])(D,A,C,!1,null,"ac76d062",null),O=F.exports,$=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},B=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"fantasyfootballtwitterbot"}},[e._v("Fantasy Football Twitter Bot")]),a("p",[e._v("Python run twitter bot that uses Tweepy API as well as the Sleeper.app API. Sleeper.app is the app used for the fantasy football league. This bot will tweet out information relative to the league. Such as, the leagues current standings, the matchup results for the week and more. Now there is data available on the "),a("a",{attrs:{href:"https://austinspencer.works/Fantasy-Twitter/"}},[e._v("website")]),e._v("!")]),a("h2",{attrs:{id:"specificleagues"}},[e._v("Specific Leagues")]),a("p",[e._v("Split the seperate leagues into seperate scripts.. could combine them all into one but didn't want to at the moment since having seperate is easier. To combine I would need to possibly create a list with the seperate league IDs.. I also would need to switch the Redis database with each switch of the IDs. So most likely I would create a dictionary with the ID : Redis database")]),a("h2",{attrs:{id:"players"}},[e._v("Players")]),a("p",[e._v("This is a helper script that will run and pull the huge dataset of players sleeper.app has. It'll then save the ones that are actually active players in our league on Redis. There is some code in the specific leagues scripts that will work with this data to create hashes of each team name with all of their active players, deleted and re-created weekly.")]),a("h2",{attrs:{id:"website"}},[e._v("Website")]),a("p",[e._v("The website is built with HTML/CSS/JavaScript on "),a("a",{attrs:{href:"https://github.com/austinbspencer/Fantasy-Twitter/tree/webpage"}},[e._v("webpage")]),e._v(" branch. This was a fun site to build since I know there will be people actually visiting this site weekly. I chose to display everything by league. Right now that includes the standings, point leaders, and the rosters(new). All of the data being displayed is stored on Redis database and is recieved through get requests to "),a("a",{attrs:{href:"https://github.com/austinbspencer/go-backend"}},[e._v("my back-end server")]),e._v(". Each time the page is loaded all of the data is pulled, I could maybe do this more efficiently, especially for the rosters. Since I am pulling the data and it isn't even visible unless it is clicked. What I could do instead is only pull the data once the league is actually clicked on.")]),a("h2",{attrs:{id:"redis"}},[e._v("Redis")]),a("p",[e._v("This program uses Redis as the database to store any data we want to keep track of. Redis works nicely with Python and is quick and easy. Using it in this script to keep track of teams' points and wins. ")]),a("h2",{attrs:{id:"docker"}},[e._v("Docker")]),a("p",[e._v("Docker is used for running this program 24/7 and fully automating this bot. At the beginning of the season you can set it up and never touch the script again.")]),a("h2",{attrs:{id:"kubernetes"}},[e._v("Kubernetes")]),a("p",[e._v("Deploying Docker images to rancher with pipelining.")]),a("h2",{attrs:{id:"installfoundintwitterbotrepo"}},[e._v("Install Found in twitter-bot repo")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/austinbspencer/twitter-bot#twitter-developer-set-up"}},[e._v("Twitter Developer")])]),a("li",[a("a",{attrs:{href:"https://github.com/austinbspencer/twitter-bot#redis-setup"}},[e._v("Redis")])]),a("li",[a("a",{attrs:{href:"https://github.com/austinbspencer/twitter-bot#build--push"}},[e._v("Docker")])]),a("li",[a("a",{attrs:{href:"https://github.com/austinbspencer/twitter-bot#google-cloud-terminal-commands"}},[e._v("Cloud Deployent")])])]),a("h4",{attrs:{id:"checkoutbotsfflhttpstwittercombotsffltwitterprofilesmiley"}},[e._v("Checkout "),a("a",{attrs:{href:"https://twitter.com/BOTSFFL"}},[e._v("BOTS FFL")]),e._v(" twitter profile :smiley:")])])}],N={},q=N,V=Object(c["a"])(q,$,B,!1,null,"0f00cd47",null),W=V.exports,G=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},M=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",[e._v("V 1.0.1")]),a("hr",{staticClass:"my-4"}),a("h3",[e._v("Overall Updates")]),a("hr",{staticClass:"my-4"}),a("ul",[a("li",[a("p",[a("strong",[e._v("Restructured entire application")])])]),a("li",[a("p",[e._v("Your trades are no longer on the home page but in the trades page")])]),a("li",[a("p",[e._v("Added Stats page")])]),a("li",[a("p",[e._v("Added an ISSUES link in footer. Please use for issues "),a("strong",[e._v("and")]),e._v(" recommendations!")])])]),a("br"),a("h3",[e._v("/home")]),a("hr",{staticClass:"my-4"}),a("ul",[a("li",[a("p",[e._v("Home is a completely new page where you can explore everything going on on Capital Tracker")])]),a("li",[a("p",[e._v("Added Top Users section based on total number of trades entered")])]),a("li",[a("p",[e._v("Added Trending Stocks section displayed in order")])]),a("li",[a("p",[e._v("Added Recent Trades where you can trades as they are placed")])]),a("li",[a("p",[e._v("All recent trades are clickable and in the trade card you can view the user's stats if they are public")])])]),a("br"),a("h3",[e._v("/stats")]),a("hr",{staticClass:"my-4"}),a("ul",[a("li",[a("p",[a("strong",[e._v("Overall stats can now be public!")])])]),a("p",[e._v("When you unlock your stats other users will be able to see them when you are on the recent trades page")]),a("li",[a("p",[e._v("View specific stats below your overall stats")])])]),a("h3",[e._v("/trade")]),a("hr",{staticClass:"my-4"}),a("ul",[a("li",[a("p",[e._v("Shares and options trades are no longer separated")])]),a("li",[a("p",[e._v("You can now click table rows to view specific trade card from all 3 tabs(all, open, closed)")])])]),a("h3",[e._v("What's Next")]),a("hr",{staticClass:"my-4"}),a("ul",[a("li",[a("p",[e._v("Personalized notifications")])]),a("li",[a("p",[e._v("Ability to 'like' trades found in the recent trades")])]),a("li",[a("p",[e._v("Ability to add comments to users trades in the recent trades section")])]),a("li",[a("p",[e._v("Charts that allow you to see some stats visually")])]),a("li",[a("p",[e._v("Updated landing page")])])])])}],U={},K=Object(c["a"])(U,G,M,!1,null,null,null),J=K.exports,L=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},H=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"coffeeshop"}},[e._v("coffee-shop")]),a("p",[e._v("Coffee shop built in Java from JetBrains learning. Check out the demo of the program running "),a("a",{attrs:{href:"https://austinspencer.works/projects/java/demos/coffee/"}},[e._v("here")])]),a("h1",{attrs:{id:"running"}},[e._v("Running")]),a("p",[e._v("This will allow user to interact with a coffee shop the way you would in real life.")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/austinbspencer/coffee-shop/tree/main#buy"}},[e._v("Buy")])]),a("li",[a("a",{attrs:{href:"https://github.com/austinbspencer/coffee-shop/tree/main#fill"}},[e._v("Fill")])]),a("li",[a("a",{attrs:{href:"https://github.com/austinbspencer/coffee-shop/tree/main#take"}},[e._v("Take")])]),a("li",[a("a",{attrs:{href:"https://github.com/austinbspencer/coffee-shop/tree/main#buy"}},[e._v("Remaining")])])]),a("h2",{attrs:{id:"jetbrains"}},[e._v("JetBrains")]),a("p",[e._v("This is a project from "),a("a",{attrs:{href:"https://hyperskill.org/projects/33?track=1"}},[e._v("here")]),e._v(". I chose to use Eclipse to build and run this project. Will work with whichever compiler of your choice. The main purpose of this project was to refresh my Java and OOP skills. I enjoyed creating this project for those reasons.")]),a("h1",{attrs:{id:"functions"}},[e._v("Functions")]),a("p",[e._v("List of each of the functions available to the user. Each with examples of with output/input. The symbol > represents the user input. Note that it's not part of the output.")]),a("h2",{attrs:{id:"buy"}},[e._v("Buy")]),a("p",[e._v("Allows user to buy either an espresso, latte, or a cappuccino. Each has their own specific needs as far as ingredients and price.")]),a("pre",[a("code",[e._v("Write action (buy, fill, take, remaining, exit): \n> buy\n\nWhat do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino, back - to main menu: \n> 2\nI have enough resources, making you a coffee!\n\nWrite action (buy, fill, take, remaining, exit): \n> buy\n\nWhat do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino, back - to main menu: \n> 2\nSorry, not enough water!\n")])]),a("h2",{attrs:{id:"fill"}},[e._v("Fill")]),a("p",[e._v("Allows user to fill each ingredient with whatever amount they desire.")]),a("pre",[a("code",[e._v("Write action (buy, fill, take, remaining, exit): \n> fill\n\nWrite how many ml of water do you want to add: \n> 1000\nWrite how many ml of milk do you want to add: \n> 0\nWrite how many grams of coffee beans do you want to add: \n> 0\nWrite how many disposable cups of coffee do you want to add: \n> 0\n")])]),a("h2",{attrs:{id:"take"}},[e._v("Take")]),a("p",[e._v("Allows user to take all of the money out of the register")]),a("pre",[a("code",[e._v("Write action (buy, fill, take, remaining, exit): \n> take\n\nI gave you $564\n")])]),a("h2",{attrs:{id:"remaining"}},[e._v("Remaining")]),a("p",[e._v("Displays what how much of each ingredient and the amount of money available.")]),a("pre",[a("code",[e._v("Write action (buy, fill, take, remaining, exit): \n> remaining\n\nThe coffee machine has:\n400 of water\n540 of milk\n120 of coffee beans\n9 of disposable cups\n$550 of money\n")])])])}],X={},Y=X,z=Object(c["a"])(Y,L,H,!1,null,"683f00b9",null),Q=z.exports,Z=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},ee=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"discordbot"}},[e._v("Discord Bot")]),a("p",[e._v("This is using JavaScript to create a Discord bot. This interacts with "),a("a",{attrs:{href:"https://github.com/discordjs/discord.js"}},[e._v("Discord.js")]),e._v(" to automate commands within my Discord server.")]),a("h2",{attrs:{id:"dependencies"}},[e._v("Dependencies")]),a("ul",[a("li",[a("a",{attrs:{href:"https://nodejs.org/en/"}},[e._v("node.js")])]),a("li",[a("a",{attrs:{href:"https://github.com/discordjs/discord.js"}},[e._v("Discord.js")])]),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/ioredis"}},[e._v("ioredis")])]),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/node-fetch"}},[e._v("node-fetch")])]),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/badwords"}},[e._v("badwords")])]),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/moment"}},[e._v("moment")])]),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/moment-duration-format"}},[e._v("moment-duration-format")])])]),a("h2",{attrs:{id:"functionality"}},[e._v("Functionality")]),a("p",[e._v("So far the bot has limited functionality. As of right now the bot can reply to certain messages, either with a gif or with a regular text message. I would like to add several more functions and the possibilities seem endless.")]),a("ul",[a("li",[e._v("Reply to specific keywords")]),a("li",[e._v("Send gifs")]),a("li",[e._v("Send updates (Of what i'm not sure)")]),a("li",[e._v("Show user statistics when prompted")]),a("li",[e._v("Ban users")]),a("li",[e._v("ETC..")])])])}],te={},ae=te,ie=Object(c["a"])(ae,Z,ee,!1,null,"639926ff",null),oe=ie.exports,se=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},ne=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"encoderdecoderbuiltwithgo"}},[e._v("Encoder & Decoder built with Go")]),a("p",[e._v("This is an Encoder and eventually decoder that I built in Go. Originally built in C++ for CSE school project but migrated into Go. Interested to see how the run times compare for large files. So far the encoding is working nicely and I think close to finished.")]),a("h2",{attrs:{id:"running"}},[e._v("Running")]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("go run main.go <input.txt >output.txt\n")])]),a("h2",{attrs:{id:"examples"}},[e._v("Examples")]),a("p",[e._v("Input:")]),a("pre",[a("code",[e._v("Mississippi\n")])]),a("ul",[a("li",[e._v("Create each shift of character and append to str2 slice")]),a("li",[e._v("[ississippiM ssissippiMi sissippiMis issippiMiss ssippiMissi sippiMissis ippiMississ ppiMississi piMississip iMississipp Mississippi]")]),a("li",[e._v("Sort the strings in the slice lexicographically")]),a("li",[e._v("Take the last letter of each string in order")]),a("li",[e._v("Ouput the index of original string")]),a("li",[e._v("Next line output frequency of cluster followed by character Output:")])]),a("pre",[a("code",[e._v("0\n1 i 1 p 2 s 1 M 1 p 1 i 2 s 2 i\n")])]),a("ul",[a("li",[e._v("So the actual last letters are i p s s M p i s s i")])])])}],re={},le=re,ce=Object(c["a"])(le,se,ne,!1,null,"b4606348",null),he=ce.exports,de=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},ue=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"encodedecodeprogramforcse310asu"}},[e._v("Encode/Decode Program for CSE 310 @ ASU")]),a("p",[e._v("This is a program that will take std::in input and output to std::out. However both can be redirected from/to txt files. Pretty fun program to build overall.")]),a("h2",{attrs:{id:"howtorun"}},[e._v("How To Run")]),a("ul",[a("li",[e._v("Clone the repository onto your machine")]),a("li",[e._v("Create txt file to encode/decode or use some that I already have in the repository")]),a("li",[e._v("Move the txt file you want to use into the Code folder")]),a("li",[e._v("cd into the Code folder")])]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("# In terminal\ncd Code/\n")])]),a("ul",[a("li",[e._v("Build your executables for encode and decode")])]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("# In terminal\nmake encode\nmake decode\n")])]),a("ul",[a("li",[e._v("Run commands to encode and decode your txt file")])]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("# In terminal\n# Encode with insertion sort\n./encode insertion < your-txt-file.txt > encoded-your-txt-file.txt\n# OR with quick sort\n./encode quick < your-txt-file.txt > encoded-your-txt-file.txt\n\n# Decode with insertion sort\n./decode insertion < encoded-your-txt-file.txt > decoded-your-txt-file.txt\n# OR with quick sort\n./decode quick < encoded-your-txt-file.txt > decoded-your-txt-file.txt\n")])]),a("ul",[a("li",[e._v("Test to see the decode worked")])]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("# In terminal\ndiff decoded-your-txt-file.txt your-txt-file.txt\n")])])])}],pe={},ve=pe,me=Object(c["a"])(ve,de,ue,!1,null,"1562e9d8",null),ge=me.exports,fe=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},_e=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"gorestfulapihitshttpshitsseeyoufarmcomapicountincrbadgesvgurlhttps3a2f2fgithubcom2fabspen12fgobackendcount_bg2329beb0title_bg23555555icongosvgicon_color2329beb0titlehitsedge_flatfalsehttpshitsseeyoufarmcom"}},[e._v("Go RESTful API "),a("a",{attrs:{href:"https://hits.seeyoufarm.com"}},[a("img",{attrs:{src:"https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fabspen1%2Fgo-backend&count_bg=%2329BEB0&title_bg=%23555555&icon=go.svg&icon_color=%2329BEB0&title=hits&edge_flat=false",alt:"Hits"}})])]),a("p",[e._v("Building a RESTful API using Go programming language. I love the combination of Go and Redis as my backend for my website. I think Go is an awesome programming language and combined with the ease and speed of Redis is hard to beat. I would love to implement something more complex in the backend that would allow me to use Go Routines and channeling to get the most out of Go's speed and possibilities. This program is used in my "),a("a",{attrs:{href:"https://austinbspencer.github.io"}},[e._v("website")]),e._v(" as the backend for a few different pages. Also check out my websites "),a("a",{attrs:{href:"https://github.com/austinbspencer/austinbspencer.github.io"}},[e._v("repository")]),e._v("!")]),a("h2",{attrs:{id:"alp"}},[e._v("📁 alp")]),a("ul",[a("li",[e._v("Package that allows my "),a("a",{attrs:{href:"https://austinspencer.works/stock-app"}},[e._v("webapp")]),e._v(" to get current stock data")]),a("li",[e._v("Post request returns the current price of given stock ticker")]),a("li",[e._v("Used to check how many shares for each holding given the percentage and current price of the stock")])]),a("h2",{attrs:{id:"authdeprecated"}},[e._v("📁 auth (Deprecated)")]),a("ul",[a("li",[e._v("Package that imports goDotEnv")]),a("li",[e._v("This allows me to not need the goDotEnv function in each project and rather just import the function from my auth project")])]),a("h2",{attrs:{id:"botsffl"}},[e._v("📁 botsffl")]),a("ul",[a("li",[e._v("Package that is pretty ugly to be honest")]),a("li",[e._v("Need to clean up this code but it works for now")]),a("li",[e._v("Back-end for my fantasy football league's hub "),a("a",{attrs:{href:"https://austinspencer.works/BOTS-FFL"}},[e._v("BOTS-FFL")])]),a("li",[e._v("This package is how I get the standings and point leaders on the website")])]),a("h2",{attrs:{id:"email"}},[e._v("📁 email")]),a("ul",[a("li",[e._v("Package for the contact page on my website")]),a("li",[e._v("Imports the net/smtp package to allow me to send gmail of the contact info")]),a("li",[e._v("Will send an email in format:")])]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("webapp\n\n\nName: Joe  Email: example@host.com\nMessage: This is an example.\n")])]),a("ul",[a("li",[a("strong",[e._v("Now also sending birthday messages from Python script api request")])])]),a("h2",{attrs:{id:"players"}},[e._v("📁 players")]),a("ul",[a("li",[e._v("Populates team names for the dropdown bar within the Roster section of my website "),a("a",{attrs:{href:"https://austinspencer.works/BOTS-FFL/#rosters"}},[e._v("here")])]),a("li",[e._v("Most of the work here is done on my Python scripts that pulls the data from Sleeper.app and saves it into my Redis database")])]),a("h3",{attrs:{id:"rosters"}},[e._v("📁 rosters")]),a("ul",[a("li",[e._v("Largest set of data on my back-end server so far")]),a("li",[e._v("Shows the full roster for all 12 teams within each region")]),a("li",[e._v("In total around 300 players for each region")])]),a("h3",{attrs:{id:"trending"}},[e._v("📁 trending")]),a("ul",[a("li",[e._v("Package that shows the trending players based on adds/dropped in sleeper leagues")]),a("li",[e._v("Pretty cool and simple call")]),a("li",[e._v("The request is made on a Python script that then saves the top 10 for 24hour and 5 day ranges respectively")]),a("li",[e._v("All visible within the trending section of the website "),a("a",{attrs:{href:"https://austinspencer.works/BOTS-FFL/#trending-players"}},[e._v("here")])])]),a("h2",{attrs:{id:"projects"}},[e._v("📁 projects")]),a("ul",[a("li",[e._v("Package I use to connect to redis for 'Next Project' page in my website")]),a("li",[e._v("The main bulk of working with saving the project information")]),a("li",[e._v("The way I use Redigo in this package is actually pretty awesome..")]),a("li",[e._v("Using a set I have the key as projects and the value added is a JSON Marshall of the struct Project : Project Description")])]),a("h2",{attrs:{id:"rps"}},[e._v("📁 rps")]),a("ul",[a("li",[e._v("Rock Paper Scissors backend package")]),a("li",[e._v("Will save a user's score with a hash like this:")])]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("username {\n      wins: 20,\n      losses: 20,\n}\n")])]),a("h2",{attrs:{id:"test"}},[e._v("📁 test")]),a("ul",[a("li",[e._v("Messy code that I use to test specific functions, mostly with Redis and JSON")])]),a("h2",{attrs:{id:"todos"}},[e._v("📁 todos")]),a("ul",[a("li",[e._v("This package displays my todos json list")]),a("li",[e._v("Made to be used on my website but haven't gotten around to actually implementing it")]),a("li",[e._v("Would be something to look into finishing at a later point")])]),a("h2",{attrs:{id:"twitter"}},[e._v("📁 twitter")]),a("ul",[a("li",[e._v("This is how I am displaying the data for my twitter bot on the webpage")]),a("li",[e._v("This is one of my all-time favorite projects I have ever done and I have spent a lot of time doing it")]),a("li",[e._v("Please check out the "),a("a",{attrs:{href:"https://austinspencer.works/twitter-bot"}},[e._v("webpage")]),e._v(" and the "),a("a",{attrs:{href:"https://github.com/austinbspencer/twitter-bot"}},[e._v("source code")])])]),a("h3",{attrs:{id:"tweet"}},[e._v("📁 tweet")]),a("ul",[a("li",[e._v("This package uses Go to with the twitter API to tweet out specific tweets")]),a("li",[e._v("As of right now the only tweets being sent out with the back-end post request is about Call of Duty")]),a("li",[e._v("The main chunk of code is built with JavaScript and uses the call-of-duty-api npm package")]),a("li",[e._v("The JavaScript application will tweet out every hour if there are new stats to log of the specific users (myself and 1 other friend currently)")]),a("li",[e._v("Will also tweet out the weekly stats at the end of the week")]),a("li",[e._v("I'm looking forward to taking advantage of this package more in the future!!")])]),a("h2",{attrs:{id:"checkmailpackage"}},[e._v("Checkmail Package")]),a("ul",[a("li",[e._v("Checking to make sure the email given is a valid email")]),a("li",[e._v("Already a simple format check on the front end to catch obvious errors")]),a("li",[e._v("This is a much more ellaborate check")])]),a("h1",{attrs:{id:"running"}},[e._v("Running")]),a("h2",{attrs:{id:"runmaingo"}},[e._v("Run main.go")]),a("ul",[a("li",[e._v("cd to your go-backend directory")]),a("li",[e._v("In terminal: $ go run main.go")]),a("li",[e._v("Now your program/server is running")])]),a("h2",{attrs:{id:"testgetpostrequests"}},[e._v("Test GET/POST requests")]),a("ul",[a("li",[e._v("Using an app of your choosing (I use "),a("a",{attrs:{href:"https://www.postman.com/downloads/"}},[e._v("Postman")]),e._v(")")]),a("li",[e._v("Put in your request URL (localhost:8558/projects)")]),a("li",[e._v("Either choose POST or GET request and check the body of the output")])]),a("h2",{attrs:{id:"builttorunasdockercontainer"}},[e._v("Built to run as Docker container")]),a("h3",{attrs:{id:"dockercommands"}},[e._v("Docker Commands")]),a("ul",[a("li",[e._v("cd into the working directory")])]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("# Build the image\ndocker build -t imageName\n\n# Run the image you just built as a container\ndocker run -d \\\n--name containerName \\\n--restart unless-stopped \\\n# Expose the port\n-p 8558:8558 \\\nimageName\n")])]),a("h2",{attrs:{id:"kubernetesimplementation"}},[e._v("Kubernetes Implementation")]),a("ul",[a("li",[e._v("Added austin-api-dc-svc-ingress.yaml which is for the Kubernetes deployment")]),a("li",[e._v("Integrated from the .env into env variables saved in Kubernetes secrets")]),a("li",[e._v("Something to keep in mind is never use .env files with Docker containers since then anyone running the docker container will have access to those .env variables")])]),a("h3",{attrs:{id:"rancherpipeline"}},[e._v("Rancher Pipeline")]),a("ul",[a("li",[e._v("Within Kubernetes, have pipelining set up with this GitHub repository")]),a("li",[e._v("Each push in the repository will redeploy the project with the changes implemented")])]),a("h2",{attrs:{id:"dockerhelp"}},[e._v("Docker Help")]),a("ul",[a("li",[e._v("$ docker --help")]),a("li",[e._v("$ docker image --help")]),a("li",[e._v("$ docker container --help")])])])}],be={},we=be,ye=Object(c["a"])(we,fe,_e,!1,null,"2eea5205",null),ke=ye.exports,Ie=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},Te=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"cse340spring2021project2"}},[e._v("CSE340 Spring 2021 Project 2")]),a("p",[e._v("Generating a lexical analyzer automatically!")]),a("h2",{attrs:{id:"introduction"}},[e._v("Introduction")]),a("p",[e._v("I will start with a high-level description of the project in this section. In subsequent sections, I will go into a detailed description of the requirements and how to go about implementing a solution that satisfies them. The goal of this project is to implement a lexical analyzer automatically for any list of tokens that are specified using regular expressions. The input to your program will have two parts:")]),a("ol",[a("li",[a("p",[e._v("The first part of the input is a list of tokens separated by commas and terminated with the # (hash) symbol. Each token in the list consists of a token name and a token description. The token description is a regular expression for the token. The list has the following form:")]),a("p",[a("strong",[e._v("t1"),a("em",[e._v("name t1")]),e._v("description , t2"),a("em",[e._v("name t2")]),e._v("description , … , tk"),a("em",[e._v("name tk")]),e._v("description #")])])]),a("li",[a("p",[e._v("The second part of the input is a input string of letters and digits and space characters.")])])]),a("p",[e._v("Your program will read the list of tokens, represent them internally in appropriate data structures, and then do lexical analysis on the input string to break it down into a sequence of tokens and lexeme pairs from the provided list of tokens. The output of the program will be this sequence of tokens and lexemes. If during the processing of the input string, your program cannot identify a token to match from the list, it outputs "),a("strong",[e._v("ERROR")]),e._v(" and stops.")]),a("p",[e._v("If the input to the program has a syntax error, then your program should not do any lexical analysis of the input string and instead it should output a syntax error message and exits.")]),a("h2",{attrs:{id:"outputformat"}},[e._v("Output Format")]),a("p",[e._v("The output will be either SYNTAX ERROR if the input has a syntax error or a message indicating that one or more of the tokens have expressions that are not valid (see below) or a sequence of tokens and their corresponding lexemes according to the list of tokens provided if there are no errors. More specifically, the following are the output requirements.")]),a("ol",[a("li",[a("p",[e._v("if the input to your program is not in the correct format (not according to the grammar in Section 2), your parser should output SYNTAX ERROR and nothing else, so you should make sure not to print anything before the complete parsing of the input is completed.")])]),a("li",[a("p",[e._v("if the input to your program is syntactically correct, then there are two cases to consider:")])])]),a("ul",[a("li",[e._v("If any of the regular expressions of the tokens in the list of tokens in the input to your program can generate the empty string, then your program should output")])]),a("pre",[a("code",[e._v("EPSILON IS NOOOOOT A TOKEN !!! tok_1 tok_2 ... tok_k\n# where **tok 1, tok 2, ..., tok k** is the list of tokens whose regular expressions can generate the empty string.\n")])]),a("ul",[a("li",[e._v("If there is no syntax error and none of the expressions of the tokens can generate the empty string, your program should do lexical analysis on INPUT TEXT and produce a sequence of tokens and lexemes in INPUT TEXT according to the list of tokens specified in the input to your program. Each token and lexeme should be printed on a separate line. The output on a given line will be of the form "),a("code",[e._v('t , "lexeme"')]),e._v(" where t is the name of a token and lexeme is the actual lexeme for the token t. If during lexical analysis of "),a("strong",[e._v("INPUT TEXT")]),e._v(", a syntax error is encountered then "),a("strong",[e._v("ERROR")]),e._v(" is printed on a separate line and the program exits. In doing lexical analysis for "),a("strong",[e._v("INPUT TEXT")]),e._v(", "),a("strong",[e._v("SPACE")]),e._v(" is treated as a separator and is otherwise ignored. ")])]),a("h2",{attrs:{id:"examples"}},[e._v("Examples")]),a("p",[e._v("Each of the following examples gives an input and the corresponding expected output.")]),a("ul",[a("li",[e._v("Input 1")])]),a("pre",[a("code",{staticClass:"commandline language-commandline"},[e._v('t1 (a)|(b) , t2 ((a)*).(a) , t3 (((a)|(b))*).(((c)*).(c)) #\n"a aac bbc aabc"\n')])]),a("p",[e._v("This input specifies three tokens t1, t2, and t3 and an INPUT TEXT “a aac bbc aabc”. Since the input is in the correct format and none of the regular expressions generates epsilon, the output of your program should be the list tokens in the INPUT TEXT:")]),a("ul",[a("li",[e._v("Output 1")])]),a("pre",[a("code",{staticClass:"commandline language-commandline"},[e._v('t1 , "a"\nt3 , "aac"\nt3 , "bbc"\nt3 , "aabc"\n')])]),a("ul",[a("li",[e._v("Input 2")])]),a("pre",[a("code",{staticClass:"commandline language-commandline"},[e._v('t1 (a)|(b) , t2 ((a)*).(a) , t3 (((a)|(b))*).(c) # \n"a aa bbc aad aa"\n')])]),a("p",[e._v("This input specifies three tokens t1, t2, and t3 and an INPUT TEXT “a aa bbc aad aa”. Since the input is in the correct format and none of the regular expressions generates epsilon, the output of your program should be the list tokens in the INPUT TEXT the output of the program should be")]),a("ul",[a("li",[e._v("Output 2")])]),a("pre",[a("code",{staticClass:"commandline language-commandline"},[e._v('t1 , "a"\nt2 , "aa"\nt3 , "bbc"\nt2 , "aa"\nERROR\n')])]),a("p",[e._v("Note that doing lexical analysis for INPUT TEXT according to the list of tokens produces ERROR after the second t2 token because there is no token that starts with ’d’.")]),a("ul",[a("li",[e._v("Input 3")])]),a("pre",[a("code",{staticClass:"commandline language-commandline"},[e._v('t1a (a)|(b) , t2bc (a).((a)*) , t34 (((a)|(b))*).((c)|(d))\n# "aaabbcaaaa"\n')])]),a("p",[e._v("This input specifies three tokens whose names are t1a, t2bc, and t34 and an input text “aaabbcaaaa”. Since the input is in the correct format, the output of your program should be the list tokens in the INPUT TEXT:")]),a("ul",[a("li",[e._v("Output 3")])]),a("pre",[a("code",{staticClass:"commandline language-commandline"},[e._v('t34 , "aaabbc"\nt2bc , "aaaa"\n')])]),a("ul",[a("li",[e._v("Input 4")])]),a("pre",[a("code",{staticClass:"commandline language-commandline"},[e._v('t1 (a)|(b) , t2 ((a)*).(a) , t3 (a)*, t4 b , t5 ((a)|(b))* #\n"a aac bbc aabc"\n')])]),a("p",[e._v("This input specifies five tokens and an INPUT TEXT “a aac bbc aabc”. Since some of the regular expressions can generate epsilon, the output:")]),a("ul",[a("li",[e._v("Output 4")])]),a("pre",[a("code",{staticClass:"commandline language-commandline"},[e._v("EPSILON IS NOOOOOT A TOKEN !!! t3 t5\n")])])])}],Ee={},xe=Ee,je=Object(c["a"])(xe,Ie,Te,!1,null,"54f0d3f1",null),Pe=je.exports,Se=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},Ae=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",{attrs:{id:"twitterbothitshttpshitsseeyoufarmcomapicountincrbadgesvgurlhttps3a2f2fgithubcom2fabspen12ftwitterbotcount_bg2300aceetitle_bg23555555icontwittersvgicon_color2300aceetitlehitsedge_flatfalsehttpshitsseeyoufarmcom"}},[e._v("Twitter Bot "),a("a",{attrs:{href:"https://hits.seeyoufarm.com"}},[a("img",{attrs:{src:"https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fabspen1%2Ftwitter-bot&count_bg=%2300ACEE&title_bg=%23555555&icon=twitter.svg&icon_color=%2300ACEE&title=hits&edge_flat=false",alt:"Hits"}})])]),a("p",[e._v("Learning python using tweepy and twitter API to automate twitter functions. Some functions used in this are automatically tweeting, replying to mentions, following users back and more. Most of the examples I've seen online were reading and writing from files, however, in my opinion Redis database is as easy, if not easier, to use. Redis also lowers CPU storage space, especially while doing the sentiment analysis which can download thousands of tweets. For more reliable 24/7 running, I built this script into a Docker container. ")]),a("h2",{attrs:{id:"checkoutthewebpagehttpsaustinspencerworkstwitterbotforsomestatisticsofmyaccount"}},[e._v("Checkout the "),a("a",{attrs:{href:"https://austinspencer.works/twitter-bot/"}},[e._v("webpage")]),e._v(" for some statistics of my account!")]),a("h1",{attrs:{id:"prerequisites"}},[e._v("Prerequisites")]),a("h2",{attrs:{id:"twitterdevelopersetup"}},[e._v("Twitter Developer Setup")]),a("ul",[a("li",[e._v("Create your developer account "),a("a",{attrs:{href:"https://developer.twitter.com/en/apply-for-access"}},[e._v("here")])]),a("li",[a("a",{attrs:{href:"https://developer.twitter.com/en/docs/twitter-api/getting-started/guide"}},[e._v("guide")])]),a("li",[e._v("Start a new application and fill out your information")]),a("li",[e._v("Save your needed keys")]),a("li",[e._v("Consumer ID (API KEY V2)")]),a("li",[e._v("Consumer Secret Key (API SECRET V2)")]),a("li",[e._v("Key ID (ACCESS TOKEN V2)")]),a("li",[e._v("Secret Key ID (SECRET V2)")])]),a("h2",{attrs:{id:"idetexteditor"}},[e._v("IDE/Text Editor")]),a("p",[e._v("I use Visual Studio Code and prefer that over the other editors I have used. But I will also link some other popular ones if you want to check them out.")]),a("ul",[a("li",[a("a",{attrs:{href:"https://code.visualstudio.com/"}},[e._v("VSCode")])]),a("li",[a("a",{attrs:{href:"https://www.sublimetext.com/3"}},[e._v("Sublime")])]),a("li",[a("a",{attrs:{href:"https://www.jetbrains.com/pycharm/download/"}},[e._v("PyCharm")])])]),a("h2",{attrs:{id:"pythondownload"}},[e._v("Python Download")]),a("p",[e._v("Make sure to download a version of Python that is at least 3.")]),a("ul",[a("li",[e._v("Download python (3.x) from "),a("a",{attrs:{href:"https://www.python.org/downloads/"}},[e._v("here")])])]),a("h2",{attrs:{id:"customizeyourbot"}},[e._v("Customize Your Bot")]),a("p",[e._v("Below are some instruction you can copy and paste in your terminal to get started with creating your personal bot. First open terminal and then cd into wherever you want to store your code. In this example I will cd into Documents and assume you are using VSCode.")]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("cd Documents/\ngit clone https://github.com/austinbspencer/twitter-bot.git\ncd twitter-bot/\n# code . is a shortcut with Visual Studio Code\ncode .\n")])]),a("p",[e._v("Now that you have the code on your local machine you can edit bot.py to make it your own. Also, if you need inspiration or a live example run the command below in your terminal.")]),a("pre",[a("code",{staticClass:"bash language-bash"},[e._v("# cd into twitter-bot folder first\ngit checkout coding-specific\n")])]),a("p",[e._v("Now you will be able to see the exact script that my twitter bot is running within bot.py.")]),a("ul",[a("li",[e._v("After you've personalized the script, you are ready to get it running")])]),a("h2",{attrs:{id:"choosewheretorunyourscript"}},[e._v("Choose where to run your script")]),a("p",[e._v("You can run your bot "),a("a",{attrs:{href:"https://github.com/austinbspencer/twitter-bot/blob/master/README-local.md"}},[e._v("locally")]),e._v(", on a "),a("a",{attrs:{href:"https://github.com/austinbspencer/twitter-bot/blob/master/README-cloud.md"}},[e._v("Google Cloud VM instance")]),e._v(", or on an "),a("a",{attrs:{href:"https://github.com/austinbspencer/twitter-bot/blob/master/README-aws.md"}},[e._v("AWS ec2 VM")]),e._v(". I prefer in the cloud so that I don't have to worry about my computer being on all the time to keep the script running. For the cloud I have instructions for using a Google Cloud Instance below. When you open a new account on the Google Cloud console you will recieve $300 credit for you to spend however you'd like. This will last a long time if the only thing you are doing on the cloud is running the twitter bot.")]),a("h2",{attrs:{id:"contributionsarewelcomed"}},[e._v("Contributions are welcomed! 💚")]),a("ul",[a("li",[a("p",[a("strong",[e._v("If you have any ideas, talk to me here: "),a("a",{attrs:{href:"https://austinspencer.works/about/contact/"}},[a("img",{attrs:{src:"https://i.imgur.com/2SqWbO1.png",alt:"Issues",title:"mail icon without padding"}})])])])]),a("li",[a("p",[a("strong",[e._v("Or submit an issue "),a("a",{attrs:{href:"https://github.com/austinbspencer/twitter-bot/issues"}},[e._v("here")])])])]),a("li",[a("p",[a("strong",[e._v("Check out my personal bot account here: "),a("a",{attrs:{href:"https://twitter.com/interntendie"}},[a("img",{attrs:{src:"http://i.imgur.com/wWzX9uB.png",alt:"Twitter",title:"twitter icon without padding"}})])])])])])])}],Ce={name:"twitter-bot"},Re=Ce,De=Object(c["a"])(Re,Se,Ae,!1,null,"447c488e",null),Fe=De.exports,Oe={props:{name:String},components:{abspen1:d,"alpaca-go":f,"alpaca-python":I,attendance:S,"bday-email":O,bots:W,"cap-track":J,"coffee-shop":Q,"discord-bot":oe,encode:he,"encode-decode":ge,"go-backend":ke,"lexical-analyzer":Pe,"twitter-bot":Fe},data:function(){return{}},methods:{getProject:function(){this.$store.commit("projectInfo",this.name)},loadRepoStats:function(e,t){return this.$vuetify.theme.dark?"https://github-readme-stats.vercel.app/api/pin/?username=".concat(t,"&repo=").concat(e,"&bg_color=000&title_color=FF7028&text_color=fff"):"https://github-readme-stats.vercel.app/api/pin/?username=".concat(t,"&repo=").concat(e,"&theme=default_repocard&title_color=FF7028")}},computed:{projInfo:function(){return this.$store.getters.currentProject}},mounted:function(){this.getProject()}},$e=Oe,Be=a("6544"),Ne=a.n(Be),qe=a("b0af"),Ve=a("cc20"),We=a("62ad"),Ge=a("a523"),Me=a("ce7e"),Ue=a("132d"),Ke=a("adda"),Je=a("8e36"),Le=a("0fd9"),He=Object(c["a"])($e,i,o,!1,null,"4aa03394",null);t["default"]=He.exports;Ne()(He,{VCard:qe["a"],VChip:Ve["a"],VCol:We["a"],VContainer:Ge["a"],VDivider:Me["a"],VIcon:Ue["a"],VImg:Ke["a"],VProgressLinear:Je["a"],VRow:Le["a"]})}}]);
//# sourceMappingURL=chunk-2d0a4d7f.08318f2f.js.map